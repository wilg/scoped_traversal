= Scoped Traversal

A simple way to define next and previous relationships in an ActiveRecord model.

For example, if you have a list of articles, and you want to be able to traverse them with article.next and article.previous.

== Installation

You can install this as a plugin into your Rails app.

  script/plugin install git://github.com/supapuerco/scopedtraversal.git


== Usage

In your model, call rank_by and pass in a column name.

  class User < ActiveRecord::Base
    traverse_by :score
  end

You can then traverse them with the following methods:

	@user.next
	@user.previous
	
=== Namespaces

You can also add an optional namespace, like so:

  class User < ActiveRecord::Base
	  traverse_by :score, :namespace => true
	  traverse_by :created_at, :namespace => :oldest
  end

You can then traverse them with the following methods:

	@user.next_score
	@user.previous_score

	@user.next_oldest
	@user.previous_oldest